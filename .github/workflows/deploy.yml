name: Deploy to EC2

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test || echo "No tests specified"

      - name: Run linting
        run: npm run lint || echo "No linting specified"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navigate to app directory
            cd /home/ubuntu/app

            # Pull latest code
            if [ -d ".git" ]; then
              git pull origin main
            else
              git clone ${{ secrets.REPO_URL }} .
            fi

            # Stop existing containers
            docker-compose down

            # Remove old images
            docker system prune -f

            # Build and start new containers
            docker-compose up -d --build

            # Show running containers
            docker-compose ps
